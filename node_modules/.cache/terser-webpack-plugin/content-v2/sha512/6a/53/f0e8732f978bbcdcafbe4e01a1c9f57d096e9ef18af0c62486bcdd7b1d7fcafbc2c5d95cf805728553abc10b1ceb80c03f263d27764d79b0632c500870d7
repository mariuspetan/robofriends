{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\components\\\\Card.js\",\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\components\\\\CardList.js\",\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\components\\\\SearchBox.js\",\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\components\\\\Scroll.js\",\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\containers\\\\App.js\",\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Marius Petan\\\\Downloads\\\\webdev\\\\robofriends\\\\src\\\\index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"concat\",\"alt\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"SearchBox\",\"searchField\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yNAceA,EAZF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GAC3B,OACCC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACdH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAG,wBAAAC,OAA0BN,EAA1B,YAAwCO,IAAI,WACnDN,EAAAC,EAAAC,cAAA,MAAA,KACCF,EAAAC,EAAAC,cAAA,KAAA,KAAKL,GACLG,EAAAC,EAAAC,cAAA,IAAA,KAAIJ,MCaMS,EAlBE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OAClB,OACCR,EAAAC,EAAAC,cAAA,MAAA,KAEEM,EAAOC,IAAI,SAACC,EAAMC,GACjB,OACCX,EAAAC,EAAAC,cAACU,EAAD,CACAC,IAAKF,EACLZ,GAAIS,EAAOG,GAAGZ,GACdF,KAAMW,EAAOG,GAAGd,KAChBC,MAAOU,EAAOG,GAAGb,YCERgB,EAbG,SAAAlB,GAAiCA,EAA/BmB,YAA+B,IAAlBC,EAAkBpB,EAAlBoB,aACjC,OACChB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAY,OACfH,EAAAC,EAAAC,cAAA,QAAA,CACAC,UAAY,mCACZc,KAAK,SACLC,YAAY,gBACZC,SAAYH,MCCAI,EARA,SAACC,GACf,OACCrB,EAAAC,EAAAC,cAAA,MAAA,CAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACnEJ,EAAMK,WCiDKC,qBA7Cd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAgBDI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAACtB,YAAaqB,EAAME,OAAOC,SAhBzCX,EAAKY,MAAQ,CACZhC,OAAQ,GACRO,YAAa,IAJDa,mFASM,IAAAa,EAAAV,KACnBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAC7B,OAAQsC,uCAW9B,IAAAC,EACwBhB,KAAKS,MAA7BhC,EADAuC,EACAvC,OAAQO,EADRgC,EACQhC,YACViC,EAAiBxC,EAAOyC,OAAO,SAAAC,GACpC,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASrC,EAAYoC,iBAEtD,OAAQ3C,EAAO6C,OAGbrD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAW,MAAf,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWtC,aAAce,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACqD,EAAD,KACAvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUhD,OAAUwC,MANrBhD,EAAAC,EAAAC,cAAA,KAAA,KAAA,kBA9BcuD,EAAAA,kBCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,EAAAA,EAASC,OACRhE,EAAAC,EAAAC,cAAC+D,EAAD,MACAC,SAASC,eAAe,SDsHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react'; \\r\\n\\r\\nconst Card = ({name, email, id}) => {\\r\\n\\treturn (\\r\\n\\t\\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\r\\n\\t\\t\\t<img src={`https://robohash.org/${id}?200X200`} alt='robots' \\t/>\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<h2>{name}</h2>\\r\\n\\t\\t\\t\\t\\t<p>{email}</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t \\t</div> \\r\\n\\t\\t);\\r\\n}\\r\\n\\r\\nexport default Card;\",\"import React from 'react'; \\r\\nimport Card from './Card.js'; \\r\\n\\r\\nconst CardList = ({robots}) => {\\r\\n\\treturn (\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\trobots.map((user, i) => {\\r\\n\\t\\t\\t\\t\\treturn (\\r\\n\\t\\t\\t\\t\\t\\t<Card \\r\\n\\t\\t\\t\\t\\t\\tkey={i} \\r\\n\\t\\t\\t\\t\\t\\tid={robots[i].id} \\r\\n\\t\\t\\t\\t\\t\\tname={robots[i].name} \\r\\n\\t\\t\\t\\t\\t\\temail={robots[i].email}/>\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t);\\r\\n}\\r\\n\\r\\nexport default CardList; \",\"import React from 'react'; \\r\\n\\r\\nconst SearchBox = ({searchField, searchChange}) => {\\r\\nreturn (\\r\\n\\t<div className = 'pa2'>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\tclassName = 'pa3 ba b--green bg-lightest-blue'\\r\\n\\t\\t\\ttype='search' \\r\\n\\t\\t\\tplaceholder='search robots' \\r\\n\\t\\t\\tonChange = {searchChange} \\r\\n\\t\\t\\t/>\\r\\n\\t</div>\\r\\n\\t); \\r\\n}\\r\\n\\r\\nexport default SearchBox; \",\"import React from 'react'; \\r\\n\\r\\nconst Scroll = (props) => {\\r\\n\\treturn (\\r\\n\\t\\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\\r\\n\\t\\t\\t{props.children}\\r\\n\\t\\t</div>\\r\\n\\t\\t); \\r\\n};\\r\\n\\r\\nexport default Scroll; \",\"import React,{Component}from 'react'; \\r\\nimport CardList from '../components/CardList'; \\r\\nimport SearchBox from '../components/SearchBox';\\r\\nimport Scroll from '../components/Scroll';  \\r\\n\\r\\nimport './App.css'; \\r\\n\\r\\n\\r\\nclass App extends Component {\\r\\n\\tconstructor() {\\r\\n\\t\\tsuper()\\r\\n\\t\\tthis.state = {\\r\\n\\t\\t\\trobots: [], \\r\\n\\t\\t\\tsearchField: ''\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\r\\n\\tcomponentDidMount() {\\r\\n\\t\\tfetch('https://jsonplaceholder.typicode.com/users')\\r\\n\\t\\t.then(response => response.json())\\r\\n\\t\\t.then(users => this.setState({robots: users}));\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\r\\n\\tonSearchChange = (event) => {\\r\\n\\t\\tthis.setState({searchField: event.target.value}); \\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\r\\n\\trender() {\\r\\n\\t\\tconst { robots, searchField } = this.state; \\r\\n\\t\\tconst filteredRobots = robots.filter(robot => {\\r\\n\\t\\t\\treturn robot.name.toLowerCase().includes(searchField.toLowerCase()); \\r\\n\\t\\t})\\r\\n\\t\\treturn !robots.length ? \\r\\n\\t\\t\\t <h1>Loading</h1>  : \\r\\n\\t\\t\\t(\\r\\n\\t\\t\\t\\t<div className='tc '>\\r\\n\\t\\t\\t\\t\\t<h1 className= 'f1'>RoboFriends</h1>\\r\\n\\t\\t\\t\\t\\t<SearchBox searchChange={this.onSearchChange}/>\\r\\n\\t\\t\\t\\t\\t<Scroll>\\r\\n\\t\\t\\t\\t\\t<CardList robots = {filteredRobots} />\\r\\n\\t\\t\\t\\t\\t</Scroll>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t);\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\r\\n\\t\\r\\n}\\r\\n\\r\\nexport default App; \",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\n//import Card from './Card.js';\\nimport 'tachyons'; \\n\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n\\t<App />, \\n\\tdocument.getElementById('root'));\\n\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},15:function(e,t,n){},17:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),l=(n(14),n(3)),i=n(4),s=n(6),u=n(5),h=n(7),m=function(e){var t=e.name,n=e.email,a=e.id;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{src:\"https://robohash.org/\".concat(a,\"?200X200\"),alt:\"robots\"}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,t),r.a.createElement(\"p\",null,n)))},d=function(e){var t=e.robots;return r.a.createElement(\"div\",null,t.map(function(e,n){return r.a.createElement(m,{key:n,id:t[n].id,name:t[n].name,email:t[n].email})}))},b=function(e){e.searchField;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:t}))},f=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"5px solid black\",height:\"800px\"}},e.children)},g=(n(15),function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(u.a)(t).call(this))).onSearchChange=function(t){e.setState({searchField:t.target.value})},e.state={robots:[],searchField:\"\"},e}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({robots:t})})}},{key:\"render\",value:function(){var e=this.state,t=e.robots,n=e.searchField,a=t.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return t.length?r.a.createElement(\"div\",{className:\"tc \"},r.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),r.a.createElement(b,{searchChange:this.onSearchChange}),r.a.createElement(f,null,r.a.createElement(d,{robots:a}))):r.a.createElement(\"h1\",null,\"Loading\")}}]),t}(a.Component));n(16),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(17)}},[[8,1,2]]]);","extractedComments":[]}